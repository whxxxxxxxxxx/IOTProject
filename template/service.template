package service

// 数据处理可以在这哦
import (
	"context"
	"github.com/pkg/errors"
	"google.golang.org/protobuf/types/known/emptypb"
	"IOTProject/core/errorx"
	"IOTProject/core/tracex"
)

type S struct {
	{{.appName}}V1.UnimplementedPingServiceServer
}

func (s S) {{.appNameExport}}(ctx context.Context, in *{{.appName}}V1.PingRequest) (*{{.appName}}V1.PingResponse, error) {
	return &{{.appName}}V1.PingResponse{Value: in.Value}, nil
}

func (s S) {{.appNameExport}}Err(ctx context.Context, _ *{{.appName}}V1.ABitOfEverything) (*emptypb.Empty, error) {
	_, span := tracex.TracerFromContext(ctx).Start(ctx, "{{.appName}}Err")
	defer span.End()
	span.RecordError(errors.New("{{.appName}}Err not implemented"))
	//return nil, errors.Wrapf(errorx.NewErrCodeMsg(502000, "这是不可以的操作"), "{{.appName}}Err not implemented")
	return nil, errorx.NewErrCodeMsg(401000, "这是不可以的操作")
}

func (s S) {{.appNameExport}}Auth(ctx context.Context, in *emptypb.Empty) (*emptypb.Empty, error) {
	return nil, errorx.UnAuthorizedError
}